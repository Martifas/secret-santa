/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */

import type { ColumnType } from 'kysely'

export type Generated<T> =
  T extends ColumnType<infer S, infer I, infer U>
    ? ColumnType<S, I | undefined, U>
    : ColumnType<T, T | undefined, T>

export type Timestamp = ColumnType<Date, Date | string, Date | string>

export interface Event {
  budgetLimit: number
  createdAt: Generated<Timestamp>
  createdBy: number
  description: string
  eventDate: Timestamp
  id: Generated<number>
  name: string
  status: string
  updatedAt: Generated<Timestamp>
}

export interface User {
  avatarUrl: string | null
  createdAt: Generated<Timestamp>
  email: string
  firstName: string | null
  id: Generated<number>
  lastLogin: Generated<Timestamp>
  lastName: string | null
  password: string
  username: string
}

export interface DB {
  event: Event
  user: User
}
